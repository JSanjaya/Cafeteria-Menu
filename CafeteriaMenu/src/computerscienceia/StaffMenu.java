/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package computerscienceia;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author 42752
 */
public class StaffMenu extends javax.swing.JFrame {

    /**
     * Creates new form StudentMenu
     */
    public StaffMenu() {
        initComponents();
        this.setLocationRelativeTo(null);
        showDataOnTableFriday();
        showDataOnTableThursday();
        showDataOnTableWednesday();
        showDataOnTableTuesday();
        showDataOnTableMonday();
        stTableMonday.setRowHeight(40);
        stTableTuesday.setRowHeight(40);
        stTableWednesday.setRowHeight(40);
        stTableThursday.setRowHeight(40);
        stTableFriday.setRowHeight(40);

    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        stTabbedPane = new javax.swing.JTabbedPane();
        stPanelMonday = new javax.swing.JPanel();
        stScrollMonday = new javax.swing.JScrollPane();
        stTableMonday = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtCuisine1 = new javax.swing.JTextField();
        txtFoodItem1 = new javax.swing.JTextField();
        txtDescription1 = new javax.swing.JTextField();
        txtPrice1 = new javax.swing.JTextField();
        btnSave1 = new javax.swing.JButton();
        btnReset1 = new javax.swing.JButton();
        btnUpdate1 = new javax.swing.JButton();
        btnDelete1 = new javax.swing.JButton();
        btnBackStaff1 = new javax.swing.JButton();
        lblDescription1 = new javax.swing.JLabel();
        stPanelTuesday = new javax.swing.JPanel();
        suScrollTuesday = new javax.swing.JScrollPane();
        stTableTuesday = new javax.swing.JTable();
        btnReset2 = new javax.swing.JButton();
        btnUpdate2 = new javax.swing.JButton();
        btnDelete2 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txtFoodItem2 = new javax.swing.JTextField();
        txtCuisine2 = new javax.swing.JTextField();
        txtDescription2 = new javax.swing.JTextField();
        txtPrice2 = new javax.swing.JTextField();
        btnSave2 = new javax.swing.JButton();
        lblDescription2 = new javax.swing.JLabel();
        btnBackStaff2 = new javax.swing.JButton();
        stPanelWednesday = new javax.swing.JPanel();
        stScrollWednesday = new javax.swing.JScrollPane();
        stTableWednesday = new javax.swing.JTable();
        btnReset3 = new javax.swing.JButton();
        btnUpdate3 = new javax.swing.JButton();
        btnDelete3 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtFoodItem3 = new javax.swing.JTextField();
        txtCuisine3 = new javax.swing.JTextField();
        txtDescription3 = new javax.swing.JTextField();
        txtPrice3 = new javax.swing.JTextField();
        btnSave3 = new javax.swing.JButton();
        lblDescription3 = new javax.swing.JLabel();
        btnBackStaff3 = new javax.swing.JButton();
        stPanelThursday = new javax.swing.JPanel();
        stScrollThursday = new javax.swing.JScrollPane();
        stTableThursday = new javax.swing.JTable();
        btnReset4 = new javax.swing.JButton();
        btnUpdate4 = new javax.swing.JButton();
        btnDelete4 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtFoodItem4 = new javax.swing.JTextField();
        txtCuisine4 = new javax.swing.JTextField();
        txtDescription4 = new javax.swing.JTextField();
        txtPrice4 = new javax.swing.JTextField();
        btnSave4 = new javax.swing.JButton();
        lblDescription4 = new javax.swing.JLabel();
        btnBackStaff4 = new javax.swing.JButton();
        stPanelFriday = new javax.swing.JPanel();
        suScrollFriday = new javax.swing.JScrollPane();
        stTableFriday = new javax.swing.JTable();
        txtFoodItem5 = new javax.swing.JTextField();
        txtDescription5 = new javax.swing.JTextField();
        txtPrice5 = new javax.swing.JTextField();
        btnSave5 = new javax.swing.JButton();
        btnReset5 = new javax.swing.JButton();
        btnUpdate5 = new javax.swing.JButton();
        btnDelete5 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtCuisine5 = new javax.swing.JTextField();
        lblDescription5 = new javax.swing.JLabel();
        btnBackStaff5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        stTableMonday.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Food ID", "Cuisine", "Food Item", "Description", "Price (IDR)"
            }
        ));
        stTableMonday.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stTableMondayMouseClicked(evt);
            }
        });
        stScrollMonday.setViewportView(stTableMonday);
        if (stTableMonday.getColumnModel().getColumnCount() > 0) {
            stTableMonday.getColumnModel().getColumn(3).setResizable(false);
            stTableMonday.getColumnModel().getColumn(3).setPreferredWidth(250);
        }

        jLabel1.setText("Cuisine:");
        jLabel1.setAlignmentX(0.5F);

        jLabel2.setText("Food Item:");
        jLabel2.setAlignmentX(0.5F);

        jLabel3.setText("Price: ");
        jLabel3.setAlignmentX(0.5F);

        jLabel4.setText("Description:");
        jLabel4.setAlignmentX(0.5F);

        btnSave1.setText("SAVE");
        btnSave1.setAlignmentX(0.5F);
        btnSave1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave1ActionPerformed(evt);
            }
        });

        btnReset1.setText("RESET");
        btnReset1.setAlignmentX(0.5F);
        btnReset1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReset1ActionPerformed(evt);
            }
        });

        btnUpdate1.setText("UPDATE");
        btnUpdate1.setAlignmentX(0.5F);
        btnUpdate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdate1ActionPerformed(evt);
            }
        });

        btnDelete1.setText("DELETE");
        btnDelete1.setAlignmentX(0.5F);
        btnDelete1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelete1ActionPerformed(evt);
            }
        });

        btnBackStaff1.setText("Back");
        btnBackStaff1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackStaff1ActionPerformed(evt);
            }
        });

        lblDescription1.setBackground(new java.awt.Color(255, 255, 255));
        lblDescription1.setOpaque(true);

        javax.swing.GroupLayout stPanelMondayLayout = new javax.swing.GroupLayout(stPanelMonday);
        stPanelMonday.setLayout(stPanelMondayLayout);
        stPanelMondayLayout.setHorizontalGroup(
            stPanelMondayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stPanelMondayLayout.createSequentialGroup()
                .addGroup(stPanelMondayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(stPanelMondayLayout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addGroup(stPanelMondayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnReset1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDelete1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(stPanelMondayLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(stPanelMondayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSave1, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                            .addGroup(stPanelMondayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3)
                                .addComponent(jLabel1))
                            .addComponent(btnUpdate1, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                        .addGap(5, 5, 5)
                        .addGroup(stPanelMondayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPrice1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDescription1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCuisine1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtFoodItem1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(stPanelMondayLayout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(btnBackStaff1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(stPanelMondayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(stScrollMonday, javax.swing.GroupLayout.DEFAULT_SIZE, 656, Short.MAX_VALUE)
                    .addComponent(lblDescription1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        stPanelMondayLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtCuisine1, txtDescription1, txtFoodItem1});

        stPanelMondayLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDelete1, btnReset1, btnSave1, btnUpdate1});

        stPanelMondayLayout.setVerticalGroup(
            stPanelMondayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stPanelMondayLayout.createSequentialGroup()
                .addGroup(stPanelMondayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(stPanelMondayLayout.createSequentialGroup()
                        .addGroup(stPanelMondayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtCuisine1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(stPanelMondayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtFoodItem1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(stPanelMondayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtDescription1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(stPanelMondayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPrice1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(63, 63, 63)
                        .addGroup(stPanelMondayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSave1)
                            .addComponent(btnReset1))
                        .addGap(41, 41, 41)
                        .addGroup(stPanelMondayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnUpdate1)
                            .addComponent(btnDelete1)))
                    .addComponent(stScrollMonday, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(stPanelMondayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(stPanelMondayLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(btnBackStaff1)
                        .addContainerGap(52, Short.MAX_VALUE))
                    .addGroup(stPanelMondayLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(lblDescription1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        stPanelMondayLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnBackStaff1, btnDelete1, btnReset1, btnSave1, btnUpdate1, txtPrice1});

        stPanelMondayLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtCuisine1, txtDescription1, txtFoodItem1});

        stTabbedPane.addTab("Monday", stPanelMonday);

        stTableTuesday.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Food ID", "Cuisine", "Food Item", "Description", "Price (IDR)"
            }
        ));
        stTableTuesday.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stTableTuesdayMouseClicked(evt);
            }
        });
        suScrollTuesday.setViewportView(stTableTuesday);
        if (stTableTuesday.getColumnModel().getColumnCount() > 0) {
            stTableTuesday.getColumnModel().getColumn(3).setResizable(false);
            stTableTuesday.getColumnModel().getColumn(3).setPreferredWidth(250);
        }

        btnReset2.setText("RESET");
        btnReset2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReset2ActionPerformed(evt);
            }
        });

        btnUpdate2.setText("UPDATE");
        btnUpdate2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdate2ActionPerformed(evt);
            }
        });

        btnDelete2.setText("DELETE");
        btnDelete2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelete2ActionPerformed(evt);
            }
        });

        jLabel17.setText("Cuisine:");

        jLabel18.setText("Food Item:");

        jLabel19.setText("Price: ");

        jLabel20.setText("Description:");

        btnSave2.setText("SAVE");
        btnSave2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave2ActionPerformed(evt);
            }
        });

        lblDescription2.setBackground(new java.awt.Color(255, 255, 255));
        lblDescription2.setOpaque(true);

        btnBackStaff2.setText("Back");
        btnBackStaff2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackStaff2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout stPanelTuesdayLayout = new javax.swing.GroupLayout(stPanelTuesday);
        stPanelTuesday.setLayout(stPanelTuesdayLayout);
        stPanelTuesdayLayout.setHorizontalGroup(
            stPanelTuesdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, stPanelTuesdayLayout.createSequentialGroup()
                .addGroup(stPanelTuesdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(stPanelTuesdayLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(stPanelTuesdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(stPanelTuesdayLayout.createSequentialGroup()
                                .addGroup(stPanelTuesdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel20)
                                    .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(18, 18, 18)
                                .addGroup(stPanelTuesdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtFoodItem2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCuisine2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, stPanelTuesdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtPrice2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtDescription2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(stPanelTuesdayLayout.createSequentialGroup()
                                .addComponent(btnUpdate2)
                                .addGap(34, 34, 34)
                                .addComponent(btnDelete2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(stPanelTuesdayLayout.createSequentialGroup()
                                .addComponent(btnSave2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(btnReset2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(38, 38, 38))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, stPanelTuesdayLayout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(btnBackStaff2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(stPanelTuesdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(suScrollTuesday, javax.swing.GroupLayout.DEFAULT_SIZE, 668, Short.MAX_VALUE)
                    .addComponent(lblDescription2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(16, 16, 16))
        );

        stPanelTuesdayLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDelete2, btnReset2, btnSave2, btnUpdate2});

        stPanelTuesdayLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtCuisine2, txtFoodItem2});

        stPanelTuesdayLayout.setVerticalGroup(
            stPanelTuesdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stPanelTuesdayLayout.createSequentialGroup()
                .addGroup(stPanelTuesdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(stPanelTuesdayLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(stPanelTuesdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(txtCuisine2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(stPanelTuesdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFoodItem2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18))
                        .addGap(21, 21, 21)
                        .addGroup(stPanelTuesdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(txtDescription2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(stPanelTuesdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPrice2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19))
                        .addGap(63, 63, 63)
                        .addGroup(stPanelTuesdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSave2)
                            .addComponent(btnReset2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(41, 41, 41)
                        .addGroup(stPanelTuesdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnUpdate2)
                            .addComponent(btnDelete2)))
                    .addComponent(suScrollTuesday, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(stPanelTuesdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(stPanelTuesdayLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(btnBackStaff2))
                    .addGroup(stPanelTuesdayLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblDescription2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        stPanelTuesdayLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnSave2, btnUpdate2});

        stPanelTuesdayLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtCuisine2, txtDescription2, txtFoodItem2, txtPrice2});

        stPanelTuesdayLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnBackStaff2, btnDelete2});

        stTabbedPane.addTab("Tuesday", stPanelTuesday);

        stTableWednesday.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Food ID", "Cuisine", "Food Item", "Description", "Price (IDR)"
            }
        ));
        stTableWednesday.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stTableWednesdayMouseClicked(evt);
            }
        });
        stScrollWednesday.setViewportView(stTableWednesday);
        if (stTableWednesday.getColumnModel().getColumnCount() > 0) {
            stTableWednesday.getColumnModel().getColumn(3).setResizable(false);
            stTableWednesday.getColumnModel().getColumn(3).setPreferredWidth(250);
        }

        btnReset3.setText("RESET");
        btnReset3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReset3ActionPerformed(evt);
            }
        });

        btnUpdate3.setText("UPDATE");
        btnUpdate3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdate3ActionPerformed(evt);
            }
        });

        btnDelete3.setText("DELETE");
        btnDelete3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelete3ActionPerformed(evt);
            }
        });

        jLabel13.setText("Cuisine:");

        jLabel14.setText("Food Item:");

        jLabel15.setText("Price: ");

        jLabel16.setText("Description:");

        btnSave3.setText("SAVE");
        btnSave3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave3ActionPerformed(evt);
            }
        });

        lblDescription3.setBackground(new java.awt.Color(255, 255, 255));
        lblDescription3.setOpaque(true);

        btnBackStaff3.setText("Back");
        btnBackStaff3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackStaff3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout stPanelWednesdayLayout = new javax.swing.GroupLayout(stPanelWednesday);
        stPanelWednesday.setLayout(stPanelWednesdayLayout);
        stPanelWednesdayLayout.setHorizontalGroup(
            stPanelWednesdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, stPanelWednesdayLayout.createSequentialGroup()
                .addGroup(stPanelWednesdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(stPanelWednesdayLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(stPanelWednesdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(stPanelWednesdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(stPanelWednesdayLayout.createSequentialGroup()
                                    .addComponent(btnUpdate3)
                                    .addGap(33, 33, 33)
                                    .addComponent(btnDelete3, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, stPanelWednesdayLayout.createSequentialGroup()
                                    .addGroup(stPanelWednesdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel15)
                                        .addComponent(jLabel16)
                                        .addComponent(jLabel14)
                                        .addComponent(jLabel13))
                                    .addGap(18, 18, 18)
                                    .addGroup(stPanelWednesdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtFoodItem3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtPrice3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtDescription3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtCuisine3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(10, 10, 10)))
                            .addGroup(stPanelWednesdayLayout.createSequentialGroup()
                                .addComponent(btnSave3, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(btnReset3, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(43, 43, 43))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, stPanelWednesdayLayout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(btnBackStaff3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(stPanelWednesdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblDescription3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(stScrollWednesday, javax.swing.GroupLayout.DEFAULT_SIZE, 661, Short.MAX_VALUE))
                .addGap(23, 23, 23))
        );

        stPanelWednesdayLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDelete3, btnReset3, btnSave3, btnUpdate3});

        stPanelWednesdayLayout.setVerticalGroup(
            stPanelWednesdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stPanelWednesdayLayout.createSequentialGroup()
                .addGroup(stPanelWednesdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(stScrollWednesday, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, stPanelWednesdayLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(stPanelWednesdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(txtCuisine3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(stPanelWednesdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFoodItem3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addGap(21, 21, 21)
                        .addGroup(stPanelWednesdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(txtDescription3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(stPanelWednesdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPrice3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addGap(63, 63, 63)
                        .addGroup(stPanelWednesdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSave3)
                            .addComponent(btnReset3))
                        .addGap(41, 41, 41)
                        .addGroup(stPanelWednesdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnUpdate3)
                            .addComponent(btnDelete3))))
                .addGroup(stPanelWednesdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(stPanelWednesdayLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblDescription3, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, stPanelWednesdayLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBackStaff3)
                        .addGap(42, 42, 42))))
        );

        stTabbedPane.addTab("Wednesday", stPanelWednesday);

        stTableThursday.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Food ID", "Cuisine", "Food Item", "Description", "Price (IDR)"
            }
        ));
        stTableThursday.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stTableThursdayMouseClicked(evt);
            }
        });
        stScrollThursday.setViewportView(stTableThursday);
        if (stTableThursday.getColumnModel().getColumnCount() > 0) {
            stTableThursday.getColumnModel().getColumn(3).setResizable(false);
            stTableThursday.getColumnModel().getColumn(3).setPreferredWidth(250);
        }

        btnReset4.setText("RESET");
        btnReset4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReset4ActionPerformed(evt);
            }
        });

        btnUpdate4.setText("UPDATE");
        btnUpdate4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdate4ActionPerformed(evt);
            }
        });

        btnDelete4.setText("DELETE");
        btnDelete4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelete4ActionPerformed(evt);
            }
        });

        jLabel9.setText("Cuisine:");

        jLabel10.setText("Food Item:");

        jLabel11.setText("Price: ");

        jLabel12.setText("Description:");

        btnSave4.setText("SAVE");
        btnSave4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave4ActionPerformed(evt);
            }
        });

        lblDescription4.setBackground(new java.awt.Color(255, 255, 255));
        lblDescription4.setOpaque(true);

        btnBackStaff4.setText("Back");
        btnBackStaff4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackStaff4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout stPanelThursdayLayout = new javax.swing.GroupLayout(stPanelThursday);
        stPanelThursday.setLayout(stPanelThursdayLayout);
        stPanelThursdayLayout.setHorizontalGroup(
            stPanelThursdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, stPanelThursdayLayout.createSequentialGroup()
                .addGroup(stPanelThursdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(stPanelThursdayLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(stPanelThursdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(stPanelThursdayLayout.createSequentialGroup()
                                .addGroup(stPanelThursdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnSave4, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnUpdate4))
                                .addGap(33, 33, 33)
                                .addGroup(stPanelThursdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnDelete4, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnReset4, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(stPanelThursdayLayout.createSequentialGroup()
                                .addGroup(stPanelThursdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(18, 18, 18)
                                .addGroup(stPanelThursdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtFoodItem4, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCuisine4, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, stPanelThursdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtPrice4, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtDescription4, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(44, 44, 44))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, stPanelThursdayLayout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(btnBackStaff4, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(stPanelThursdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblDescription4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(stScrollThursday, javax.swing.GroupLayout.DEFAULT_SIZE, 661, Short.MAX_VALUE))
                .addGap(23, 23, 23))
        );

        stPanelThursdayLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDelete4, btnReset4, btnSave4, btnUpdate4});

        stPanelThursdayLayout.setVerticalGroup(
            stPanelThursdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stPanelThursdayLayout.createSequentialGroup()
                .addGroup(stPanelThursdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(stScrollThursday, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, stPanelThursdayLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(stPanelThursdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtCuisine4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(stPanelThursdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFoodItem4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(21, 21, 21)
                        .addGroup(stPanelThursdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(txtDescription4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(stPanelThursdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPrice4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addGap(63, 63, 63)
                        .addGroup(stPanelThursdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSave4)
                            .addComponent(btnReset4))
                        .addGap(41, 41, 41)
                        .addGroup(stPanelThursdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnUpdate4)
                            .addComponent(btnDelete4))))
                .addGroup(stPanelThursdayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(stPanelThursdayLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblDescription4, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(stPanelThursdayLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(btnBackStaff4)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        stTabbedPane.addTab("Thursday", stPanelThursday);

        stTableFriday.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Food ID", "Cuisine", "Food Item", "Description", "Price (IDR)"
            }
        ));
        stTableFriday.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stTableFridayMouseClicked(evt);
            }
        });
        suScrollFriday.setViewportView(stTableFriday);
        if (stTableFriday.getColumnModel().getColumnCount() > 0) {
            stTableFriday.getColumnModel().getColumn(3).setResizable(false);
            stTableFriday.getColumnModel().getColumn(3).setPreferredWidth(250);
        }

        btnSave5.setText("SAVE");
        btnSave5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave5ActionPerformed(evt);
            }
        });

        btnReset5.setText("RESET");
        btnReset5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReset5ActionPerformed(evt);
            }
        });

        btnUpdate5.setText("UPDATE");
        btnUpdate5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdate5ActionPerformed(evt);
            }
        });

        btnDelete5.setText("DELETE");
        btnDelete5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelete5ActionPerformed(evt);
            }
        });

        jLabel5.setText("Cuisine:");

        jLabel6.setText("Food Item:");

        jLabel7.setText("Price: ");

        jLabel8.setText("Description:");

        lblDescription5.setBackground(new java.awt.Color(255, 255, 255));
        lblDescription5.setOpaque(true);

        btnBackStaff5.setText("Back");
        btnBackStaff5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackStaff5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout stPanelFridayLayout = new javax.swing.GroupLayout(stPanelFriday);
        stPanelFriday.setLayout(stPanelFridayLayout);
        stPanelFridayLayout.setHorizontalGroup(
            stPanelFridayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, stPanelFridayLayout.createSequentialGroup()
                .addGroup(stPanelFridayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(stPanelFridayLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(stPanelFridayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, stPanelFridayLayout.createSequentialGroup()
                                .addComponent(btnUpdate5)
                                .addGap(33, 33, 33)
                                .addComponent(btnDelete5, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(stPanelFridayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, stPanelFridayLayout.createSequentialGroup()
                                    .addComponent(btnSave5, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                                    .addComponent(btnReset5, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, stPanelFridayLayout.createSequentialGroup()
                                    .addGroup(stPanelFridayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addGap(18, 18, 18)
                                    .addGroup(stPanelFridayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtFoodItem5, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtCuisine5, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, stPanelFridayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtPrice5, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtDescription5, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(19, 19, 19))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, stPanelFridayLayout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(btnBackStaff5, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(stPanelFridayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblDescription5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(suScrollFriday, javax.swing.GroupLayout.DEFAULT_SIZE, 668, Short.MAX_VALUE))
                .addGap(44, 44, 44))
        );

        stPanelFridayLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDelete5, btnReset5, btnSave5, btnUpdate5});

        stPanelFridayLayout.setVerticalGroup(
            stPanelFridayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(stPanelFridayLayout.createSequentialGroup()
                .addGroup(stPanelFridayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(suScrollFriday, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, stPanelFridayLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(stPanelFridayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtCuisine5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(stPanelFridayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtFoodItem5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(21, 21, 21)
                        .addGroup(stPanelFridayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtDescription5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(stPanelFridayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPrice5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(58, 58, 58)
                        .addGroup(stPanelFridayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSave5)
                            .addComponent(btnReset5))
                        .addGap(41, 41, 41)
                        .addGroup(stPanelFridayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnUpdate5)
                            .addComponent(btnDelete5))))
                .addGroup(stPanelFridayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(stPanelFridayLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblDescription5, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(stPanelFridayLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(btnBackStaff5)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        stPanelFridayLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnDelete5, btnReset5, btnSave5, btnUpdate5});

        stTabbedPane.addTab("Friday", stPanelFriday);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(stTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 976, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(stTabbedPane, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void btnSave1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave1ActionPerformed
        // TODO add your handling code here:
        try {
            Class.forName("org.apache.derby.jdbc.ClientDriver").newInstance();
            String url = "jdbc:derby://localhost:1527/ComputerScienceIA;databasename=COMPUTERSCIENCEIA";
            Connection conn = DriverManager.getConnection(url);
            if(txtCuisine1.getText().isEmpty() || txtFoodItem1.getText().isEmpty() || txtDescription1.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Please fill in all text fields");
            
            }else if(txtCuisine1.getText().matches(".*\\d+.*")){
                JOptionPane.showMessageDialog(null, "You cannot enter a number for Cuisine!");
            }else if(txtFoodItem1.getText().matches(".*\\d+.*")){
                JOptionPane.showMessageDialog(null, "You cannot enter a number for the FoodItem!");     
            }else if(txtDescription1.getText().matches(".*\\d+.*")){
                 JOptionPane.showMessageDialog(null, "You cannot enter a number for the Description!");
            }else {
             
            String query = "INSERT into MONDAY(CUISINE, FOODITEM, DESCRIPTION, PRICE) values(?,?,?,?) ";
            PreparedStatement pst = conn.prepareStatement(query);         
            pst.setString(1, txtCuisine1.getText());
            pst.setString(2, txtFoodItem1.getText());
            pst.setString(3, txtDescription1.getText());
            pst.setString(4, txtPrice1.getText());
            pst.executeUpdate();

            //refresh table
            DefaultTableModel model = (DefaultTableModel) stTableMonday.getModel();
            model.setRowCount(0);
            showDataOnTableMonday();
            
            JOptionPane.showMessageDialog(null, "Successfully saved!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "You can't enter letters/symbols for the Price or leave it blank!");
        }
        
    }//GEN-LAST:event_btnSave1ActionPerformed


    private void btnBackStaff1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackStaff1ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        LoginForm lo = new LoginForm();
        lo.setVisible(true);
    }//GEN-LAST:event_btnBackStaff1ActionPerformed

    private void btnUpdate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdate1ActionPerformed
        // TODO add your handling code here:
        try {
            Class.forName("org.apache.derby.jdbc.ClientDriver").newInstance();
            String url = "jdbc:derby://localhost:1527/ComputerScienceIA;databaseName=COMPUTERSCIENCEIA";
            Connection conn = DriverManager.getConnection(url);
            int row = stTableMonday.getSelectedRow();
            String value = stTableMonday.getModel().getValueAt(row, 0).toString();
            String query = "UPDATE APP.MONDAY SET CUISINE=?, FOODITEM=?, DESCRIPTION=?, PRICE=? where FOOD_ID=" + value;
             if(txtCuisine1.getText().isEmpty() || txtFoodItem1.getText().isEmpty() || txtDescription1.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Please fill in all text fields");
            }else if(txtCuisine1.getText().matches(".*\\d+.*")){
                JOptionPane.showMessageDialog(null, "You cannot enter a number for Cuisine!");
            }else if(txtFoodItem1.getText().matches(".*\\d+.*")){
                JOptionPane.showMessageDialog(null, "You cannot enter a number for the FoodItem!");     
            }else if(txtDescription1.getText().matches(".*\\d+.*")){
                 JOptionPane.showMessageDialog(null, "You cannot enter a number for the Description!");
            }else {
           
            PreparedStatement pst = conn.prepareStatement(query);
            pst.setString(1, txtCuisine1.getText());
            pst.setString(2, txtFoodItem1.getText());
            pst.setString(3, txtDescription1.getText());
            pst.setString(4, txtPrice1.getText());

            pst.executeUpdate();
            //refresh table
            DefaultTableModel model = (DefaultTableModel) stTableMonday.getModel();
            model.setRowCount(0);
            showDataOnTableMonday();
            JOptionPane.showMessageDialog(null, "Successfully updated!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please select a row AND/OR do not enter a letter for the Price!");
        }

    }//GEN-LAST:event_btnUpdate1ActionPerformed

    private void btnReset1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReset1ActionPerformed
        // TODO add your handling code here:
        txtCuisine1.setText("");
        txtFoodItem1.setText("");
        txtDescription1.setText("");
        txtPrice1.setText("");
    }//GEN-LAST:event_btnReset1ActionPerformed

    private void btnDelete1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelete1ActionPerformed
        // TODO add your handling code here:
        try {
            Class.forName("org.apache.derby.jdbc.ClientDriver").newInstance();
            String url = "jdbc:derby://localhost:1527/ComputerScienceIA;databaseName=COMPUTERSCIENCEIA";
            Connection conn = DriverManager.getConnection(url);
            int row = stTableMonday.getSelectedRow();
            String value = stTableMonday.getModel().getValueAt(row, 0).toString();
            String query = "DELETE FROM MONDAY where FOOD_ID=" + value;
            PreparedStatement pst = conn.prepareStatement(query); 
            pst.executeUpdate();

            //refresh table
            DefaultTableModel model = (DefaultTableModel) stTableMonday.getModel();
            model.setRowCount(0);
            showDataOnTableMonday();
            btnReset1ActionPerformed(evt);// reset gui form
            JOptionPane.showMessageDialog(null, "Successfully deleted!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please select a row to delete!");
        }
    }//GEN-LAST:event_btnDelete1ActionPerformed

    private void stTableMondayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stTableMondayMouseClicked
        // TODO add your handling code here:
         int i = stTableMonday.getSelectedRow();
        TableModel model = stTableMonday.getModel();
        txtCuisine1.setText(model.getValueAt(i, 1).toString());
        txtFoodItem1.setText(model.getValueAt(i, 2).toString());
        txtDescription1.setText(model.getValueAt(i,3).toString());
        txtPrice1.setText(model.getValueAt(i, 4).toString());
         String tip = null;
                java.awt.Point p = evt.getPoint();
                int rowIndex = stTableMonday.rowAtPoint(p);
                int colIndex = stTableMonday.columnAtPoint(p);

                
                    tip = stTableMonday.getValueAt(rowIndex, colIndex).toString();
               
                lblDescription1.setText(tip);

                
    }//GEN-LAST:event_stTableMondayMouseClicked

    private void btnSave2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave2ActionPerformed
        // TODO add your handling code here:
        try {
            Class.forName("org.apache.derby.jdbc.ClientDriver").newInstance();
            String url = "jdbc:derby://localhost:1527/ComputerScienceIA;databasename=COMPUTERSCIENCEIA";
            Connection conn = DriverManager.getConnection(url);
            String query = "INSERT into TUESDAY(CUISINE, FOODITEM, DESCRIPTION, PRICE) values(?,?,?,?) ";
           if(txtCuisine2.getText().isEmpty() || txtFoodItem2.getText().isEmpty() || txtDescription2.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Please fill in all text fields");
            
            }else if(txtCuisine2.getText().matches(".*\\d+.*")){
                JOptionPane.showMessageDialog(null, "You cannot enter a number for Cuisine!");
            }else if(txtFoodItem2.getText().matches(".*\\d+.*")){
                JOptionPane.showMessageDialog(null, "You cannot enter a number for the FoodItem!");     
            }else if(txtDescription2.getText().matches(".*\\d+.*")){
                 JOptionPane.showMessageDialog(null, "You cannot enter a number for the Description!");
            }else {
            
            PreparedStatement pst = conn.prepareStatement(query);
            

            pst.setString(1, txtCuisine2.getText());
            pst.setString(2, txtFoodItem2.getText());
            pst.setString(3, txtDescription2.getText());
            pst.setString(4, txtPrice2.getText());
            pst.executeUpdate();

            //refresh table
            DefaultTableModel model = (DefaultTableModel) stTableTuesday.getModel();
            model.setRowCount(0);
            showDataOnTableTuesday();
            
            JOptionPane.showMessageDialog(null, "Successfully saved!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "You can't enter letters or characters for the Price!");
        }
    }//GEN-LAST:event_btnSave2ActionPerformed

    private void btnSave3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave3ActionPerformed
        // TODO add your handling code here:
         try {
            Class.forName("org.apache.derby.jdbc.ClientDriver").newInstance();
            String url = "jdbc:derby://localhost:1527/ComputerScienceIA;databasename=COMPUTERSCIENCEIA";
            Connection conn = DriverManager.getConnection(url);
            String query = "INSERT into WEDNESDAY(CUISINE, FOODITEM, DESCRIPTION, PRICE) values(?,?,?,?) ";
           if(txtCuisine3.getText().isEmpty() || txtFoodItem3.getText().isEmpty() || txtDescription3.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Please fill in all text fields");
            
            }else if(txtCuisine3.getText().matches(".*\\d+.*")){
                JOptionPane.showMessageDialog(null, "You cannot enter a number for Cuisine!");
            }else if(txtFoodItem3.getText().matches(".*\\d+.*")){
                JOptionPane.showMessageDialog(null, "You cannot enter a number for the FoodItem!");     
            }else if(txtDescription3.getText().matches(".*\\d+.*")){
                 JOptionPane.showMessageDialog(null, "You cannot enter a number for the Description!");
            }else {
            
            PreparedStatement pst = conn.prepareStatement(query);
            

            pst.setString(1, txtCuisine3.getText());
            pst.setString(2, txtFoodItem3.getText());
            pst.setString(3, txtDescription3.getText());
            pst.setString(4, txtPrice3.getText());
            pst.executeUpdate();

            //refresh table
            DefaultTableModel model = (DefaultTableModel) stTableWednesday.getModel();
            model.setRowCount(0);
            showDataOnTableWednesday();
            
            JOptionPane.showMessageDialog(null, "Successfully saved!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "You can't enter letters or characters for the Price!");
        }
    }//GEN-LAST:event_btnSave3ActionPerformed

    private void btnSave4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave4ActionPerformed
        // TODO add your handling code here:
         try {
            Class.forName("org.apache.derby.jdbc.ClientDriver").newInstance();
            String url = "jdbc:derby://localhost:1527/ComputerScienceIA;databasename=COMPUTERSCIENCEIA";
            Connection conn = DriverManager.getConnection(url);
            String query = "INSERT into THURSDAY(CUISINE, FOODITEM, DESCRIPTION, PRICE) values(?,?,?,?) ";
           if(txtCuisine4.getText().isEmpty() || txtFoodItem4.getText().isEmpty() || txtDescription4.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Please fill in all text fields");
            
            }else if(txtCuisine4.getText().matches(".*\\d+.*")){
                JOptionPane.showMessageDialog(null, "You cannot enter a number for Cuisine!");
            }else if(txtFoodItem4.getText().matches(".*\\d+.*")){
                JOptionPane.showMessageDialog(null, "You cannot enter a number for the FoodItem!");     
            }else if(txtDescription4.getText().matches(".*\\d+.*")){
                 JOptionPane.showMessageDialog(null, "You cannot enter a number for the Description!");
            }else {
            
            PreparedStatement pst = conn.prepareStatement(query);
            

            pst.setString(1, txtCuisine4.getText());
            pst.setString(2, txtFoodItem4.getText());
            pst.setString(3, txtDescription4.getText());
            pst.setString(4, txtPrice4.getText());
            pst.executeUpdate();

            //refresh table
            DefaultTableModel model = (DefaultTableModel) stTableThursday.getModel();
            model.setRowCount(0);
            showDataOnTableThursday();
            
            JOptionPane.showMessageDialog(null, "Successfully saved!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "You can't enter letters or characters for the Price!");
        }
    }//GEN-LAST:event_btnSave4ActionPerformed

    private void btnSave5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave5ActionPerformed
        // TODO add your handling code here:
         try {
            Class.forName("org.apache.derby.jdbc.ClientDriver").newInstance();
            String url = "jdbc:derby://localhost:1527/ComputerScienceIA;databasename=COMPUTERSCIENCEIA";
            Connection conn = DriverManager.getConnection(url);
            String query = "INSERT into FRIDAY(CUISINE, FOODITEM, DESCRIPTION, PRICE) values(?,?,?,?) ";
            if(txtCuisine5.getText().isEmpty() || txtFoodItem5.getText().isEmpty() || txtDescription5.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Please fill in all text fields");
            
            }else if(txtCuisine5.getText().matches(".*\\d+.*")){
                JOptionPane.showMessageDialog(null, "You cannot enter a number for Cuisine!");
            }else if(txtFoodItem5.getText().matches(".*\\d+.*")){
                JOptionPane.showMessageDialog(null, "You cannot enter a number for the FoodItem!");     
            }else if(txtDescription5.getText().matches(".*\\d+.*")){
                 JOptionPane.showMessageDialog(null, "You cannot enter a number for the Description!");
            }else {
            
            PreparedStatement pst = conn.prepareStatement(query);
            
            pst.setString(1, txtCuisine5.getText());
            pst.setString(2, txtFoodItem5.getText());
            pst.setString(3, txtDescription5.getText());
            pst.setString(4, txtPrice5.getText());
            pst.executeUpdate();

            //refresh table
            DefaultTableModel model = (DefaultTableModel) stTableFriday.getModel();
            model.setRowCount(0);
            showDataOnTableFriday();
            
            JOptionPane.showMessageDialog(null, "Successfully saved!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "You can't enter letters or characters for the Price!");
        }
    }//GEN-LAST:event_btnSave5ActionPerformed

    private void btnReset2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReset2ActionPerformed
        // TODO add your handling code here:
        txtCuisine2.setText("");
        txtFoodItem2.setText("");
        txtDescription2.setText("");
        txtPrice2.setText("");
    }//GEN-LAST:event_btnReset2ActionPerformed

    private void btnUpdate2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdate2ActionPerformed
        // TODO add your handling code here:
        try {
            Class.forName("org.apache.derby.jdbc.ClientDriver").newInstance();
            String url = "jdbc:derby://localhost:1527/ComputerScienceIA;databaseName=COMPUTERSCIENCEIA";
            Connection conn = DriverManager.getConnection(url);
            int row = stTableTuesday.getSelectedRow();
            String value = stTableTuesday.getModel().getValueAt(row, 0).toString();
            String query = "UPDATE APP.TUESDAY SET CUISINE=?, FOODITEM=?, DESCRIPTION=?, PRICE=? where FOOD_ID=" + value;
           if(txtCuisine2.getText().isEmpty() || txtFoodItem2.getText().isEmpty() || txtDescription2.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Please fill in all text fields");
            
            }else if(txtCuisine2.getText().matches(".*\\d+.*")){
                JOptionPane.showMessageDialog(null, "You cannot enter a number for Cuisine!");
            }else if(txtFoodItem2.getText().matches(".*\\d+.*")){
                JOptionPane.showMessageDialog(null, "You cannot enter a number for the FoodItem!");     
            }else if(txtDescription2.getText().matches(".*\\d+.*")){
                 JOptionPane.showMessageDialog(null, "You cannot enter a number for the Description!");
            }else {
            
            PreparedStatement pst = conn.prepareStatement(query);
            pst.setString(1, txtCuisine2.getText());
            pst.setString(2, txtFoodItem2.getText());
            pst.setString(3, txtDescription2.getText());
            pst.setString(4, txtPrice2.getText());

            pst.executeUpdate();

            //refresh table
            DefaultTableModel model = (DefaultTableModel) stTableTuesday.getModel();
            model.setRowCount(0);
            showDataOnTableTuesday();
            JOptionPane.showMessageDialog(null, "Successfully updated!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please select a row AND/OR do not enter a letter for the Price!");

        }

    }//GEN-LAST:event_btnUpdate2ActionPerformed

    private void btnDelete2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelete2ActionPerformed
        // TODO add your handling code here:
        try {
            Class.forName("org.apache.derby.jdbc.ClientDriver").newInstance();
            String url = "jdbc:derby://localhost:1527/ComputerScienceIA;databaseName=COMPUTERSCIENCEIA";
            Connection conn = DriverManager.getConnection(url);
            int row = stTableTuesday.getSelectedRow();
            String value = stTableTuesday.getModel().getValueAt(row, 0).toString();
            String query = "DELETE FROM TUESDAY where FOOD_ID=" + value;
            PreparedStatement pst = conn.prepareStatement(query); 
            pst.executeUpdate();

            //refresh table
            DefaultTableModel model = (DefaultTableModel) stTableTuesday.getModel();
            model.setRowCount(0);
            showDataOnTableTuesday();
            btnReset2ActionPerformed(evt);// reset gui form
            JOptionPane.showMessageDialog(null, "Successfully deleted!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please select a row to delete!");
        }
    }//GEN-LAST:event_btnDelete2ActionPerformed

    private void btnReset3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReset3ActionPerformed
        // TODO add your handling code here:
          txtCuisine3.setText("");
        txtFoodItem3.setText("");
        txtDescription3.setText("");
        txtPrice3.setText("");
    }//GEN-LAST:event_btnReset3ActionPerformed

    private void btnUpdate3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdate3ActionPerformed
        // TODO add your handling code here:
        try {
            Class.forName("org.apache.derby.jdbc.ClientDriver").newInstance();
            String url = "jdbc:derby://localhost:1527/ComputerScienceIA;databaseName=COMPUTERSCIENCEIA";
            Connection conn = DriverManager.getConnection(url);
            int row = stTableWednesday.getSelectedRow();
            String value = stTableWednesday.getModel().getValueAt(row, 0).toString();
            String query = "UPDATE APP.WEDNESDAY SET CUISINE=?, FOODITEM=?, DESCRIPTION=?, PRICE=? where FOOD_ID=" + value;
           
            if(txtCuisine3.getText().isEmpty() || txtFoodItem3.getText().isEmpty() || txtDescription3.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Please fill in all text fields");
            
            }else if(txtCuisine3.getText().matches(".*\\d+.*")){
                JOptionPane.showMessageDialog(null, "You cannot enter a number for Cuisine!");
            }else if(txtFoodItem3.getText().matches(".*\\d+.*")){
                JOptionPane.showMessageDialog(null, "You cannot enter a number for the FoodItem!");     
            }else if(txtDescription3.getText().matches(".*\\d+.*")){
                 JOptionPane.showMessageDialog(null, "You cannot enter a number for the Description!");
            }else {
            
            PreparedStatement pst = conn.prepareStatement(query);
            pst.setString(1, txtCuisine3.getText());
            pst.setString(2, txtFoodItem3.getText());
            pst.setString(3, txtDescription3.getText());
            pst.setString(4, txtPrice3.getText());

            pst.executeUpdate();

            //refresh table
            DefaultTableModel model = (DefaultTableModel) stTableWednesday.getModel();
            model.setRowCount(0);
            showDataOnTableWednesday();
            JOptionPane.showMessageDialog(null, "Successfully updated!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please select a row AND/OR do not enter a letter for the Price!");

        }

    }//GEN-LAST:event_btnUpdate3ActionPerformed

    private void btnDelete3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelete3ActionPerformed
        // TODO add your handling code here:
        try {
            Class.forName("org.apache.derby.jdbc.ClientDriver").newInstance();
            String url = "jdbc:derby://localhost:1527/ComputerScienceIA;databaseName=COMPUTERSCIENCEIA";
            Connection conn = DriverManager.getConnection(url);
            int row = stTableWednesday.getSelectedRow();
            String value = stTableWednesday.getModel().getValueAt(row, 0).toString();
            String query = "DELETE FROM WEDNESDAY where FOOD_ID=" + value;
            PreparedStatement pst = conn.prepareStatement(query); 
            pst.executeUpdate();

            //refresh table
            DefaultTableModel model = (DefaultTableModel) stTableWednesday.getModel();
            model.setRowCount(0);
            showDataOnTableWednesday();
            btnReset3ActionPerformed(evt);// reset gui form
            JOptionPane.showMessageDialog(null, "Successfully deleted!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please select a row to delete!");
        }
    }//GEN-LAST:event_btnDelete3ActionPerformed

    private void btnReset4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReset4ActionPerformed
        // TODO add your handling code here:
        txtCuisine4.setText("");
        txtFoodItem4.setText("");
        txtDescription4.setText("");
        txtPrice4.setText("");
    }//GEN-LAST:event_btnReset4ActionPerformed

    private void btnUpdate4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdate4ActionPerformed
        // TODO add your handling code here:
        try {
            Class.forName("org.apache.derby.jdbc.ClientDriver").newInstance();
            String url = "jdbc:derby://localhost:1527/ComputerScienceIA;databaseName=COMPUTERSCIENCEIA";
            Connection conn = DriverManager.getConnection(url);
            int row = stTableThursday.getSelectedRow();
            String value = stTableThursday.getModel().getValueAt(row, 0).toString();
            String query = "UPDATE APP.THURSDAY SET CUISINE=?, FOODITEM=?, DESCRIPTION=?, PRICE=? where FOOD_ID=" + value;
            if(txtCuisine4.getText().isEmpty() || txtFoodItem4.getText().isEmpty() || txtDescription4.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Please fill in all text fields");
            
            }else if(txtCuisine4.getText().matches(".*\\d+.*")){
                JOptionPane.showMessageDialog(null, "You cannot enter a number for Cuisine!");
            }else if(txtFoodItem4.getText().matches(".*\\d+.*")){
                JOptionPane.showMessageDialog(null, "You cannot enter a number for the FoodItem!");     
            }else if(txtDescription4.getText().matches(".*\\d+.*")){
                 JOptionPane.showMessageDialog(null, "You cannot enter a number for the Description!");
            }else {
            PreparedStatement pst = conn.prepareStatement(query);
            pst.setString(1, txtCuisine4.getText());
            pst.setString(2, txtFoodItem4.getText());
            pst.setString(3, txtDescription4.getText());
            pst.setString(4, txtPrice4.getText());

            pst.executeUpdate();

            //refresh table
            DefaultTableModel model = (DefaultTableModel) stTableThursday.getModel();
            model.setRowCount(0);
            showDataOnTableThursday();
            JOptionPane.showMessageDialog(null, "Successfully updated!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please select a row AND/OR do not enter a letter for the Price!");

        }

    }//GEN-LAST:event_btnUpdate4ActionPerformed

    private void btnDelete4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelete4ActionPerformed
        // TODO add your handling code here:
         try {
            Class.forName("org.apache.derby.jdbc.ClientDriver").newInstance();
            String url = "jdbc:derby://localhost:1527/ComputerScienceIA;databaseName=COMPUTERSCIENCEIA";
            Connection conn = DriverManager.getConnection(url);
            int row = stTableThursday.getSelectedRow();
            String value = stTableThursday.getModel().getValueAt(row, 0).toString();
            String query = "DELETE FROM THURSDAY where FOOD_ID=" + value;
            PreparedStatement pst = conn.prepareStatement(query); 
            pst.executeUpdate();

            //refresh table
            DefaultTableModel model = (DefaultTableModel) stTableThursday.getModel();
            model.setRowCount(0);
            showDataOnTableThursday();
            btnReset4ActionPerformed(evt);// reset gui form
            JOptionPane.showMessageDialog(null, "Successfully deleted!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please select a row to delete!");
        
    }                                          

    }//GEN-LAST:event_btnDelete4ActionPerformed

    private void btnReset5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReset5ActionPerformed
        // TODO add your handling code here:
         txtCuisine5.setText("");
        txtFoodItem5.setText("");
        txtDescription5.setText("");
        txtPrice5.setText("");
    }//GEN-LAST:event_btnReset5ActionPerformed

    private void btnUpdate5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdate5ActionPerformed
        // TODO add your handling code here:
        try {
            Class.forName("org.apache.derby.jdbc.ClientDriver").newInstance();
            String url = "jdbc:derby://localhost:1527/ComputerScienceIA;databaseName=COMPUTERSCIENCEIA";
            Connection conn = DriverManager.getConnection(url);
            int row = stTableFriday.getSelectedRow();
            String value = stTableFriday.getModel().getValueAt(row, 0).toString();
            String query = "UPDATE APP.FRIDAY SET CUISINE=?, FOODITEM=?, DESCRIPTION=?, PRICE=? where FOOD_ID=" + value;
            if(txtCuisine5.getText().isEmpty() || txtFoodItem5.getText().isEmpty() || txtDescription5.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Please fill in all text fields");
            
            }else if(txtCuisine5.getText().matches(".*\\d+.*")){
                JOptionPane.showMessageDialog(null, "You cannot enter a number for Cuisine!");
            }else if(txtFoodItem5.getText().matches(".*\\d+.*")){
                JOptionPane.showMessageDialog(null, "You cannot enter a number for the FoodItem!");     
            }else if(txtDescription5.getText().matches(".*\\d+.*")){
                 JOptionPane.showMessageDialog(null, "You cannot enter a number for the Description!");
            }else {
            PreparedStatement pst = conn.prepareStatement(query);
            pst.setString(1, txtCuisine5.getText());
            pst.setString(2, txtFoodItem5.getText());
            pst.setString(3, txtDescription5.getText());
            pst.setString(4, txtPrice5.getText());

            pst.executeUpdate();

            //refresh table
            DefaultTableModel model = (DefaultTableModel) stTableFriday.getModel();
            model.setRowCount(0);
            showDataOnTableFriday();
            JOptionPane.showMessageDialog(null, "Successfully updated!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please select a row AND/OR do not enter a letter for the Price!");

        }
    }//GEN-LAST:event_btnUpdate5ActionPerformed

    private void btnDelete5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelete5ActionPerformed
        // TODO add your handling code here:
         try {
            Class.forName("org.apache.derby.jdbc.ClientDriver").newInstance();
            String url = "jdbc:derby://localhost:1527/ComputerScienceIA;databaseName=COMPUTERSCIENCEIA";
            Connection conn = DriverManager.getConnection(url);
            int row = stTableFriday.getSelectedRow();
            String value = stTableFriday.getModel().getValueAt(row, 0).toString();
            String query = "DELETE FROM FRIDAY where FOOD_ID=" + value;
            PreparedStatement pst = conn.prepareStatement(query); 
            pst.executeUpdate();

            //refresh table
            DefaultTableModel model = (DefaultTableModel) stTableFriday.getModel();
            model.setRowCount(0);
            showDataOnTableFriday();
            btnReset5ActionPerformed(evt);// reset gui form
            JOptionPane.showMessageDialog(null, "Successfully deleted!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please select a row to delete!");
        
    }                
    }//GEN-LAST:event_btnDelete5ActionPerformed

    private void stTableTuesdayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stTableTuesdayMouseClicked
        // TODO add your handling code here:
        int i = stTableTuesday.getSelectedRow();
        TableModel model = stTableTuesday.getModel();
        txtCuisine2.setText(model.getValueAt(i, 1).toString());
        txtFoodItem2.setText(model.getValueAt(i, 2).toString());
        txtDescription2.setText(model.getValueAt(i,3).toString());
        txtPrice2.setText(model.getValueAt(i, 4).toString());
         String tip = null;
                java.awt.Point p = evt.getPoint();
                int rowIndex = stTableTuesday.rowAtPoint(p);
                int colIndex = stTableTuesday.columnAtPoint(p);

                
                    tip = stTableTuesday.getValueAt(rowIndex, colIndex).toString();
               
                lblDescription2.setText(tip);

                
    }//GEN-LAST:event_stTableTuesdayMouseClicked

    private void stTableWednesdayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stTableWednesdayMouseClicked
        // TODO add your handling code here:
          int i = stTableWednesday.getSelectedRow();
        TableModel model = stTableWednesday.getModel();
        txtCuisine3.setText(model.getValueAt(i, 1).toString());
        txtFoodItem3.setText(model.getValueAt(i, 2).toString());
        txtDescription3.setText(model.getValueAt(i,3).toString());
        txtPrice3.setText(model.getValueAt(i, 4).toString());
         String tip = null;
                java.awt.Point p = evt.getPoint();
                int rowIndex = stTableWednesday.rowAtPoint(p);
                int colIndex = stTableWednesday.columnAtPoint(p);

                
                    tip = stTableWednesday.getValueAt(rowIndex, colIndex).toString();
               
                lblDescription3.setText(tip);
    }//GEN-LAST:event_stTableWednesdayMouseClicked

    private void stTableThursdayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stTableThursdayMouseClicked
        // TODO add your handling code here:
          int i = stTableThursday.getSelectedRow();
        TableModel model = stTableThursday.getModel();
        txtCuisine4.setText(model.getValueAt(i, 1).toString());
        txtFoodItem4.setText(model.getValueAt(i, 2).toString());
        txtDescription4.setText(model.getValueAt(i,3).toString());
        txtPrice4.setText(model.getValueAt(i, 4).toString());
         String tip = null;
                java.awt.Point p = evt.getPoint();
                int rowIndex = stTableThursday.rowAtPoint(p);
                int colIndex = stTableThursday.columnAtPoint(p);

               
                    tip = stTableThursday.getValueAt(rowIndex, colIndex).toString();
               
                lblDescription4.setText(tip);
    }//GEN-LAST:event_stTableThursdayMouseClicked

    private void stTableFridayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stTableFridayMouseClicked
        // TODO add your handling code here:
          int i = stTableFriday.getSelectedRow();
        TableModel model = stTableFriday.getModel();
        txtCuisine5.setText(model.getValueAt(i, 1).toString());
        txtFoodItem5.setText(model.getValueAt(i, 2).toString());
        txtDescription5.setText(model.getValueAt(i,3).toString());
        txtPrice5.setText(model.getValueAt(i, 4).toString());
         String tip = null;
                java.awt.Point p = evt.getPoint();
                int rowIndex = stTableFriday.rowAtPoint(p);
                int colIndex = stTableFriday.columnAtPoint(p);

                
                    tip = stTableFriday.getValueAt(rowIndex, colIndex).toString();
              
                lblDescription5.setText(tip);
    }//GEN-LAST:event_stTableFridayMouseClicked

    private void btnBackStaff2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackStaff2ActionPerformed
        // TODO add your handling code here:
         this.setVisible(false);
        LoginForm lo = new LoginForm();
        lo.setVisible(true);
    }//GEN-LAST:event_btnBackStaff2ActionPerformed

    private void btnBackStaff5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackStaff5ActionPerformed
        // TODO add your handling code here:
         this.setVisible(false);
        LoginForm lo = new LoginForm();
        lo.setVisible(true);
    }//GEN-LAST:event_btnBackStaff5ActionPerformed

    private void btnBackStaff3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackStaff3ActionPerformed
        // TODO add your handling code here:
         this.setVisible(false);
        LoginForm lo = new LoginForm();
        lo.setVisible(true);
    }//GEN-LAST:event_btnBackStaff3ActionPerformed

    private void btnBackStaff4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackStaff4ActionPerformed
        // TODO add your handling code here:
         this.setVisible(false);
        LoginForm lo = new LoginForm();
        lo.setVisible(true);
    }//GEN-LAST:event_btnBackStaff4ActionPerformed

    private ArrayList<FoodItem> Monday() {
        ArrayList<FoodItem> mondayItems = new ArrayList<>();
        try {
            Class.forName("org.apache.derby.jdbc.ClientDriver").newInstance();
            String url = "jdbc:derby://localhost:1527/ComputerScienceIA;databaseName=COMPUTERSCIENCEIA ";
            Connection conn = DriverManager.getConnection(url);
            String query = "SELECT * FROM APP.MONDAY order by CUISINE asc";
            PreparedStatement pst = conn.prepareStatement(query);
            ResultSet rs = pst.executeQuery();
            FoodItem mon;
            while (rs.next()) {
                mon = new FoodItem(rs.getInt("FOOD_ID"), rs.getString("Cuisine"), rs.getString("Fooditem"), rs.getString("Description"),
                        rs.getDouble("Price"));
                mondayItems.add(mon);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        return mondayItems;
    }

    private ArrayList<FoodItem> Tuesday() {
        ArrayList<FoodItem> tuesdayItems = new ArrayList<>();
        try {
            Class.forName("org.apache.derby.jdbc.ClientDriver").newInstance();
            String url = "jdbc:derby://localhost:1527/ComputerScienceIA;databaseName=COMPUTERSCIENCEIA";
            Connection conn = DriverManager.getConnection(url);
            String query = "SELECT * FROM APP.TUESDAY order by CUISINE asc";
            PreparedStatement pst = conn.prepareStatement(query);
            ResultSet rs = pst.executeQuery();
            FoodItem tue;
            while (rs.next()) {
                tue = new FoodItem(rs.getInt("FOOD_ID"), rs.getString("Cuisine"), rs.getString("Fooditem"), rs.getString("Description"),
                        rs.getDouble("Price"));
                tuesdayItems.add(tue);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        return tuesdayItems;
    }

    private ArrayList<FoodItem> Wednesday() {
        ArrayList<FoodItem> wednesdayItems = new ArrayList<>();
        try {
            Class.forName("org.apache.derby.jdbc.ClientDriver").newInstance();
            String url = "jdbc:derby://localhost:1527/ComputerScienceIA;databaseName=COMPUTERSCIENCEIA ";
            Connection conn = DriverManager.getConnection(url);
            String query = "SELECT * FROM APP.WEDNESDAY order by CUISINE asc";
            PreparedStatement pst = conn.prepareStatement(query);
            ResultSet rs = pst.executeQuery();
            FoodItem wed;
            while (rs.next()) {
                wed = new FoodItem(rs.getInt("FOOD_ID"), rs.getString("Cuisine"), rs.getString("Fooditem"), rs.getString("Description"),
                        rs.getDouble("Price"));
                wednesdayItems.add(wed);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        return wednesdayItems;
    }

    private ArrayList<FoodItem> Thursday() {
        ArrayList<FoodItem> thursdayItems = new ArrayList<>();
        try {
            Class.forName("org.apache.derby.jdbc.ClientDriver").newInstance();
            String url = "jdbc:derby://localhost:1527/ComputerScienceIA;databaseName=COMPUTERSCIENCEIA ";
            Connection conn = DriverManager.getConnection(url);
            String query = "SELECT * FROM APP.THURSDAY order by CUISINE asc";
            PreparedStatement pst = conn.prepareStatement(query);
            ResultSet rs = pst.executeQuery();
            FoodItem thu;
            while (rs.next()) {
               thu = new FoodItem(rs.getInt("FOOD_ID"), rs.getString("Cuisine"), rs.getString("Fooditem"), rs.getString("Description"),
                        rs.getDouble("Price"));
                thursdayItems.add(thu);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        return thursdayItems;
    }

    private ArrayList<FoodItem> Friday() {
        ArrayList<FoodItem> fridayItems = new ArrayList<>();
        try {
            Class.forName("org.apache.derby.jdbc.ClientDriver").newInstance();
            String url = "jdbc:derby://localhost:1527/ComputerScienceIA;databaseName=COMPUTERSCIENCEIA ";
            Connection conn = DriverManager.getConnection(url);
            String query = "SELECT * FROM APP.FRIDAY order by CUISINE asc";
            PreparedStatement pst = conn.prepareStatement(query);
            ResultSet rs = pst.executeQuery();
            FoodItem fri;
            while (rs.next()) {
               fri = new FoodItem(rs.getInt("FOOD_ID"), rs.getString("Cuisine"), rs.getString("Fooditem"), rs.getString("Description"),
                        rs.getDouble("Price"));
                fridayItems.add(fri);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        return fridayItems;
    }
    
    public void showDataOnTableFriday() {
        ArrayList<FoodItem> fridayList = Friday();
        DefaultTableModel model = (DefaultTableModel) stTableFriday.getModel();
       
        
        Object[] row = new Object[5];
        for (int i = 0; i < fridayList.size(); i++) {
            row[0] = fridayList.get(i).getFoodID();
            row[1] = fridayList.get(i).getCuisine();
            row[2] = fridayList.get(i).getName();
            row[3] = fridayList.get(i).getDescription();
            row[4] = fridayList.get(i).getPrice();
            model.addRow(row);
           
        }
        
    }
    
    public void showDataOnTableThursday() {
        ArrayList<FoodItem> thursdayList = Thursday();
        DefaultTableModel model = (DefaultTableModel) stTableThursday.getModel();
       
        
        Object[] row = new Object[5];
        for (int i = 0; i < thursdayList.size(); i++) {
            row[0] = thursdayList.get(i).getFoodID();
            row[1] = thursdayList.get(i).getCuisine();
            row[2] = thursdayList.get(i).getName();
            row[3] = thursdayList.get(i).getDescription();
            row[4] = thursdayList.get(i).getPrice();
            model.addRow(row);
           
        }
        
    }
    
public void showDataOnTableWednesday() {
        ArrayList<FoodItem> wednesdayList = Wednesday();
        DefaultTableModel model = (DefaultTableModel) stTableWednesday.getModel();
       
        
        Object[] row = new Object[5];
        for (int i = 0; i < wednesdayList.size(); i++) {
            row[0] = wednesdayList.get(i).getFoodID();
            row[1] = wednesdayList.get(i).getCuisine();
            row[2] = wednesdayList.get(i).getName();
            row[3] = wednesdayList.get(i).getDescription();
            row[4] = wednesdayList.get(i).getPrice();
            model.addRow(row);
           
        }
        
    }

    public void showDataOnTableTuesday() {
        ArrayList<FoodItem> tuesdayList = Tuesday();
        DefaultTableModel model = (DefaultTableModel) stTableTuesday.getModel();
       
        
        Object[] row = new Object[5];
        for (int i = 0; i < tuesdayList.size(); i++) {
            row[0] = tuesdayList.get(i).getFoodID();
            row[1] = tuesdayList.get(i).getCuisine();
            row[2] = tuesdayList.get(i).getName();
            row[3] = tuesdayList.get(i).getDescription();
            row[4] = tuesdayList.get(i).getPrice();
            model.addRow(row);
           
        }
        
    }
    
    public void showDataOnTableMonday() {
        ArrayList<FoodItem> mondayList = Monday();
        DefaultTableModel model = (DefaultTableModel) stTableMonday.getModel();
       
        
        Object[] row = new Object[5];
        for (int i = 0; i < mondayList.size(); i++) {
            row[0] = mondayList.get(i).getFoodID();
            row[1] = mondayList.get(i).getCuisine();
            row[2] = mondayList.get(i).getName();
            row[3] = mondayList.get(i).getDescription();
            row[4] = mondayList.get(i).getPrice();
            model.addRow(row);
           
        }
        
    }
    
    
    
                         
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StaffMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StaffMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StaffMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StaffMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StaffMenu().setVisible(true);

            }
        });

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBackStaff1;
    private javax.swing.JButton btnBackStaff2;
    private javax.swing.JButton btnBackStaff3;
    private javax.swing.JButton btnBackStaff4;
    private javax.swing.JButton btnBackStaff5;
    private javax.swing.JButton btnDelete1;
    private javax.swing.JButton btnDelete2;
    private javax.swing.JButton btnDelete3;
    private javax.swing.JButton btnDelete4;
    private javax.swing.JButton btnDelete5;
    private javax.swing.JButton btnReset1;
    private javax.swing.JButton btnReset2;
    private javax.swing.JButton btnReset3;
    private javax.swing.JButton btnReset4;
    private javax.swing.JButton btnReset5;
    private javax.swing.JButton btnSave1;
    private javax.swing.JButton btnSave2;
    private javax.swing.JButton btnSave3;
    private javax.swing.JButton btnSave4;
    private javax.swing.JButton btnSave5;
    private javax.swing.JButton btnUpdate1;
    private javax.swing.JButton btnUpdate2;
    private javax.swing.JButton btnUpdate3;
    private javax.swing.JButton btnUpdate4;
    private javax.swing.JButton btnUpdate5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblDescription1;
    private javax.swing.JLabel lblDescription2;
    private javax.swing.JLabel lblDescription3;
    private javax.swing.JLabel lblDescription4;
    private javax.swing.JLabel lblDescription5;
    private javax.swing.JPanel stPanelFriday;
    private javax.swing.JPanel stPanelMonday;
    private javax.swing.JPanel stPanelThursday;
    private javax.swing.JPanel stPanelTuesday;
    private javax.swing.JPanel stPanelWednesday;
    private javax.swing.JScrollPane stScrollMonday;
    private javax.swing.JScrollPane stScrollThursday;
    private javax.swing.JScrollPane stScrollWednesday;
    private javax.swing.JTabbedPane stTabbedPane;
    private javax.swing.JTable stTableFriday;
    private javax.swing.JTable stTableMonday;
    private javax.swing.JTable stTableThursday;
    private javax.swing.JTable stTableTuesday;
    private javax.swing.JTable stTableWednesday;
    private javax.swing.JScrollPane suScrollFriday;
    private javax.swing.JScrollPane suScrollTuesday;
    private javax.swing.JTextField txtCuisine1;
    private javax.swing.JTextField txtCuisine2;
    private javax.swing.JTextField txtCuisine3;
    private javax.swing.JTextField txtCuisine4;
    private javax.swing.JTextField txtCuisine5;
    private javax.swing.JTextField txtDescription1;
    private javax.swing.JTextField txtDescription2;
    private javax.swing.JTextField txtDescription3;
    private javax.swing.JTextField txtDescription4;
    private javax.swing.JTextField txtDescription5;
    private javax.swing.JTextField txtFoodItem1;
    private javax.swing.JTextField txtFoodItem2;
    private javax.swing.JTextField txtFoodItem3;
    private javax.swing.JTextField txtFoodItem4;
    private javax.swing.JTextField txtFoodItem5;
    private javax.swing.JTextField txtPrice1;
    private javax.swing.JTextField txtPrice2;
    private javax.swing.JTextField txtPrice3;
    private javax.swing.JTextField txtPrice4;
    private javax.swing.JTextField txtPrice5;
    // End of variables declaration//GEN-END:variables
}
